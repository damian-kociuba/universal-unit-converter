<?php

namespace Polcode\UnitConverterBundle\Tests\UnitsRepository;

use Polcode\UnitConverterBundle\UnitsRepository\UnitsRepository;

/**
 * Generated by PHPUnit_SkeletonGenerator on 2014-11-25 at 11:28:09.
 */
class UnitsRepositoryTest extends \PHPUnit_Framework_TestCase {

    /**
     * @var UnitsRepository
     */
    protected $object;

    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     */
    protected function setUp() {
        $this->object = new UnitsRepository(
                array(new MoneyProviderMock(), new BasicUnitsProviderMock())
                );
    }

    /**
     * @covers Polcode\UnitConverterBundle\UnitsRepository\UnitRepository::loadUnits
     * @todo   Implement testLoadUnits().
     */
    public function testLoadUnits() {
        
        $this->assertTrue($this->object->hasUnitBySymbolOrSynonym('m'));
        $this->assertTrue($this->object->hasUnitBySymbolOrSynonym('km'));
        $this->assertTrue($this->object->hasUnitBySymbolOrSynonym('cm'));
        $this->assertTrue($this->object->hasUnitBySymbolOrSynonym('$'));
        $this->assertTrue($this->object->hasUnitBySymbolOrSynonym('Â£'));
        $this->assertFalse($this->object->hasUnitBySymbolOrSynonym('Euro'));
        
    }
    
    public function testFindUnitBySymbolOrSynonym() {
        $meter = $this->object->findUnitBySymbolOrSynonym('meter');
        $this->assertEquals('m', $meter->getSymbol());
        $this->assertEquals('length', $meter->getCategory()->getName());
    }
    
    
    public function testFindUnitBySymbolOrSynonym_wrongUnit() {
        $this->assertNull($this->object->findUnitBySymbolOrSynonym('wrongUnit'));
    }
}
